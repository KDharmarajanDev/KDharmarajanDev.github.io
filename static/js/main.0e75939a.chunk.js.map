{"version":3,"sources":["ProjectCard.js","assets/LEDLightStripScheduler.png","assets/CoinConnect.png","assets/Dharmarajan_Karthik_Resume.pdf","ContactSegment.js","project-filter-reducer.js","technology-button.js","FooterAnimation.js","App.js","assets/Sandbox.jpeg","reportWebVitals.js","store.js","index.js"],"names":["useStyles","makeStyles","root","border","height","padding","media","objectFit","button","marginLeft","marginRight","borderColor","color","description","textAlign","marginTop","buttonContainer","display","justifyContent","selectTechnologies","state","technologies","ProjectCard","props","classes","clickCallback","useCallback","window","open","link","websiteCallback","website","useSelector","hasValidTechnology","firstSet","secondSet","element","has","containsAnyItem","Collapse","in","timeout","unmountOnExit","Card","className","CardHeader","title","name","CardMedia","component","image","Typography","CardActions","Button","variant","startIcon","onClick","margin","ContactSegment","Grid","container","id","align","justify","spacing","wrap","direction","alignItems","xs","sm","md","item","resume","initialState","Set","projectFilterReducer","action","type","modifiedTechnologies","payload","delete","add","buttonUsed","TechnologyButton","dispatch","useDispatch","ButtonBase","FooterAnimation","width","innerWidth","options","backgroundColor","xOffset","yOffset","PowerNode","timerId","neighbors","isEmptyNode","targetNeighbor","update","bind","this","setState","transitionTimer","stopTransition","startTransition","length","Math","floor","random","current","setTimeout","transitionToEmpty","transitionToFull","setInterval","clearInterval","draw","g","clear","fillRadius","beginFill","drawCircle","x","y","endFill","PowerTransferBeam","endX","endY","Component","lineStyle","moveTo","lineTo","Tesselation","hexagons","powerNodeRefs","coordinateToIndex","Map","root3","sqrt","nodeRef","newNeighbor","get","JSON","stringify","push","newXOffset","newYOffset","j","i","createRef","ref","toString","set","projects","LEDLightStripScheduler","CoinConnect","App","map","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAaMA,EAAYC,YAAW,CACzBC,KAAM,CACJC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,WAEtBC,MAAO,CACLC,UAAW,UACXH,OAAQ,SAEVI,OAAQ,CACNC,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,SAETC,YAAa,CACXD,MAAO,QACPE,UAAW,SACXC,UAAW,GACXV,QAAS,QAEXW,gBAAiB,CACfC,QAAS,OACTC,eAAgB,YAIhBC,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,cAW3B,SAASC,EAAYC,GAAQ,IAAD,EACjCC,EAAUxB,IAEVyB,EAAgBC,uBAAY,WAChCC,OAAOC,KAAKL,EAAMM,QACjB,CAACN,EAAMM,OAEJC,EAAkBJ,uBAAY,WAClCC,OAAOC,KAAKL,EAAMQ,WACf,CAACR,EAAMQ,UAENV,EAAeW,YAAYb,GAC3Bc,EArBV,SAAyBC,EAAUC,GAAY,IAAD,gBACtBD,GADsB,IAC5C,2BAAgC,CAAC,IAAtBE,EAAqB,QAC9B,GAAID,EAAUE,IAAID,GAChB,OAAO,GAHiC,8BAM5C,OAAO,EAesBE,CAAgBf,EAAMF,aAAcA,GAE/D,OAAQ,cAACkB,EAAA,EAAD,CAAUC,GAAIP,EAAoBQ,QAAS,OAAQC,eAAa,EAAhE,SACE,eAACC,EAAA,GAAD,GAAMC,UAAU,qBAAhB,0BAA+CpB,EAAQtB,MAAvD,0BACE,cAAC2C,EAAA,EAAD,CAAYC,MAAOvB,EAAMwB,KAAMH,UAAU,4BACzC,cAACI,EAAA,EAAD,CAAWJ,UAAWpB,EAAQlB,MAAO2C,UAAU,MAAMC,MAAO3B,EAAM2B,QAClE,cAACC,EAAA,EAAD,CAAYF,UAAU,IAAIL,UAAWpB,EAAQX,YAA7C,SACGU,EAAMV,cAET,sBAAK+B,UAAWpB,EAAQR,gBAAxB,UACGO,EAAMM,MACL,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWpB,EAAQhB,OAC5C+C,UAAW,cAAC,IAAD,IAAeC,QAAS/B,EADrC,oBAMHF,EAAMQ,SACL,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWpB,EAAQhB,OAC5C+C,UAAW,cAAC,IAAD,IAAiBC,QAAS1B,EADvC,4BAjBR,GAAkEP,EAAMwB,QCrEvE,UAA0B,mDCA1B,MAA0B,wC,kCCA1B,MAA0B,uDCQnC/C,EAAYC,YAAW,CACzBO,OAAQ,CACJiD,OAAQ,OACR9C,YAAa,QACbC,MAAO,SAEXV,KAAM,CACFC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,aAIb,SAASqD,EAAenC,GACnC,IAAMC,EAAUxB,IAchB,OAAQ,eAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,4BAA4BC,MAAM,SAASC,QAAQ,SAASC,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMC,WAAW,SAAlI,UACI,cAACR,EAAA,EAAD,CAAMS,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAhC,SACI,cAAClB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWpB,EAAQhB,OAAQgD,QAdxC,WAC1B7B,OAAOC,KAAK,qDAasF2B,UAAW,cAAC,IAAD,IAAjG,wBAIJ,cAACI,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAAClB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWpB,EAAQhB,OAAQgD,QAf1C,WACxB7B,OAAOC,KAAK,wCAcoF2B,UAAW,cAAC,IAAD,IAA/F,sBAIJ,cAACI,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAAClB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWpB,EAAQhB,OAC1CgD,QAjBD,WACf7B,OAAOC,KAAK4C,IAgByBjB,UAAW,cAAC,IAAD,IADpC,yBClDb,I,IAAMkB,EAAe,CACxBpD,aAAc,IAAIqD,IAAI,CAAC,SAAU,OAAQ,MAAO,QAAS,QAAS,UAAW,SAoBlEC,EAjBc,WAAmC,IAAlCvD,EAAiC,uDAAzBqD,EAAcG,EAAW,uCAC3D,OAAQA,EAAOC,MACX,IAAK,SACD,IAAMC,EAAuB,IAAIJ,IAAItD,EAAMC,cAM3C,OALID,EAAMC,aAAagB,IAAIuC,EAAOG,SAC9BD,EAAqBE,OAAOJ,EAAOG,SAEnCD,EAAqBG,IAAIL,EAAOG,SAE7B,CACH1D,aAAcyD,GAEtB,QACI,OAAO1D,I,QCbbpB,EAAYC,YAAW,CACzBO,QAAM,GACJC,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,QACPT,OAAQ,SALJ,4BAMS,SANT,6BAOU,QAPV,yBAQM,QARN,wBASK,QATL,GAWN+E,YAAU,GACRzE,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,UACPT,OAAQ,SALA,4BAMK,SANL,6BAOM,QAPN,yBAQE,QARF,wBASC,QATD,gCAUS,SAVT,KAcRgB,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,cAE3B,SAAS8D,EAAiB5D,GACrC,IAAMC,EAAUxB,IACVoF,EAAWC,cAMXhE,EAAeW,YAAYb,GAEjC,OAAQ,cAACmE,EAAA,EAAD,CAAY9B,QANC,WACjB4B,EAAS,CAACP,KAAM,SAAUE,QAASxD,EAAMwB,QAKFH,UAAWvB,EAAagB,IAAId,EAAMwB,MAAQvB,EAAQ0D,WAAa1D,EAAQhB,OAA1G,SACKe,EAAMwB,O,oDCxCR,SAASwC,EAAiBhE,GACrC,OACA,cAAC,QAAD,CAAOnB,OAAQ,IAAKoF,MAAO7D,OAAO8D,WAAYC,QAAS,CAAEC,gBAAiB,SAA1E,SACI,cAAC,GAAD,CAAavF,OAAQ,IAAKoF,MAAO7D,OAAO8D,WAAYzB,QAAS,GAAI4B,QAAS,GAAIC,QAAS,O,IAKzFC,E,kDAEF,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IACDwE,QAAU,KACf,EAAKC,UAAY,GACjB,EAAK5E,MAAQ,CAAC,gBAAmB,GACjC,EAAK6E,aAAc,EACnB,EAAKC,eAAiB,KACtB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAPC,E,0CAUnB,WACIC,KAAKC,SAAS,CACV,gBAAmBD,KAAKjF,MAAMmF,gBAAkB,IAAM,IAEtDF,KAAKjF,MAAMmF,iBAAmB,GAC9BF,KAAKG,mB,8BAIb,WACIH,KAAKJ,aAAc,EACnBI,KAAKH,eAAiB,KACtBG,KAAKI,oB,+BAGT,WAAqB,IAAD,OAEhB,GADAJ,KAAKJ,aAAc,EACfI,KAAKL,UAAUU,OAAS,EAAG,CAE3B,GADAL,KAAKH,eAAiBG,KAAKL,UAAUW,KAAKC,MAAMD,KAAKE,SAAWR,KAAKL,UAAUU,UAC1EL,KAAKH,eAAeY,QAAQb,YAI7B,YAHAc,YAAW,WACP,EAAKC,sBACN,KAGPX,KAAKH,eAAeY,QAAQG,mBAEhCZ,KAAKI,oB,6BAGT,WACIJ,KAAKC,SAAS,CACV,gBAAmB,MAElBD,KAAKN,UACNM,KAAKN,QAAUmB,YAAYb,KAAKF,OAAQ,IAAM,M,4BAItD,WAAkB,IAAD,OACbgB,cAAcd,KAAKN,SACnBM,KAAKN,QAAU,KACVM,KAAKJ,aACNc,YAAW,WACP,EAAKC,sBACU,IAAhBL,KAAKE,SAAkB,O,oBAIlC,WAAU,IAAD,OACL,OACI,eAAC,YAAD,WACI,cAAC,WAAD,CAAUO,KAAM,SAACC,GACbA,EAAEC,QACF,IAEIC,EAAa,EAEb,EAAKnG,MAAMmF,gBAAkB,EAIzBgB,EAHC,EAAKtB,YAG4B,EAAK7E,MAAMmF,gBALpC,IAHS,OAMgB,EAAI,EAAKnF,MAAMmF,gBAHxC,KAOL,EAAKN,cACbsB,EAXsB,IAa1BF,EAAEG,UAAU,QAAU,GACtBH,EAAEI,WAAW,EAAKlG,MAAMmG,EAAG,EAAKnG,MAAMoG,EAdZ,IAe1BN,EAAEO,UACFP,EAAEG,UAAU,QAAU,GACtBH,EAAEI,WAAW,EAAKlG,MAAMmG,EAAG,EAAKnG,MAAMoG,EAhBZ,GAiB1BN,EAAEO,UACFP,EAAEG,UAAU,QAAU,GACtBH,EAAEI,WAAW,EAAKlG,MAAMmG,EAAG,EAAKnG,MAAMoG,EAAGJ,GACzCF,EAAEO,aAGFvB,KAAKjF,MAAMmF,gBAAkB,GAAKF,KAAKJ,aAAe,cAAC4B,EAAD,CAAmBH,EAAGrB,KAAK9E,MAAMmG,EAAGC,EAAGtB,KAAK9E,MAAMoG,EAChCG,KAAMzB,KAAKH,eAAeY,QAAQvF,MAAMmG,EAAGK,KAAM1B,KAAKH,eAAeY,QAAQvF,MAAMoG,W,GA3FvJK,aAmGxB,SAASH,EAAmBtG,GACxB,IAAM6F,EAAO1F,uBAAY,SAAA2F,GACrBA,EAAEC,QACFD,EAAEG,UAAU,QAAU,GACtBH,EAAEY,UAAU,EAAG,QAAU,GACzBZ,EAAEa,OAAO3G,EAAMmG,EAAGnG,EAAMoG,GACxBN,EAAEc,OAAO5G,EAAMuG,KAAMvG,EAAMwG,MAC3BV,EAAEO,aAEN,OACI,cAAC,WAAD,CAAUR,KAAMA,I,IAIlBgB,G,kDAEF,WAAa7G,GAAQ,IAAD,8BAChB,cAAMA,IACD8G,SAAW,GAChB,EAAKC,cAAgB,GACrB,EAAKC,kBAAoB,IAAIC,IAC7B,EAAKC,MAAQ9B,KAAK+B,KAAK,GALP,E,qDAQpB,WAAqB,IAAD,gBACIrC,KAAKiC,eADT,IAChB,2BAAwC,CAAC,IAAhCK,EAA+B,QAC9BjB,EAAIiB,EAAQ7B,QAAQvF,MAAMmG,EAC1BC,EAAIgB,EAAQ7B,QAAQvF,MAAMoG,EAC5BiB,EAAc,MAClBA,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIrB,KAAK9E,MAAMyC,QAClB2D,EAAGA,OAGHgB,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,MAEdA,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIrB,KAAK9E,MAAMyC,QAClB2D,EAAGA,OAGHgB,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,KAEd,IAAMK,EAAa5C,KAAK9E,MAAMyC,QAAU,EAClCkF,EAAa7C,KAAK9E,MAAMyC,QAAUqC,KAAKoC,MAAQ,GACrDG,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIuB,EACPtB,EAAGA,EAAIuB,OAGPP,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,MAEdA,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIuB,EACPtB,EAAGA,EAAIuB,OAGPP,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,MAEdA,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIuB,EACPtB,EAAGA,EAAIuB,OAGPP,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,MAEdA,EAAcvC,KAAKkC,kBAAkBM,IAAIC,KAAKC,UAAU,CACpDrB,EAAGA,EAAIuB,EACPtB,EAAGA,EAAIuB,OAGPP,EAAQ7B,QAAQd,UAAUgD,KAAK3C,KAAKiC,cAAcM,IAEtDA,EAAc,KAEVjC,KAAKE,SAAW,IAChB8B,EAAQ7B,QAAQG,oBA9DR,iC,oBAmEpB,WACI,IAAK,IAAIkC,EAAI,EAAGA,EAAI9C,KAAKoC,MAAQpC,KAAK9E,MAAMnB,OAASiG,KAAK9E,MAAMyC,QAAU,EAAGmF,IACzE,GAAIA,EAAI,GAAK,EACT,IAAK,IAAIC,EAAI,EAAGA,EAAI/C,KAAK9E,MAAMiE,MAAQa,KAAK9E,MAAMyC,QAASoF,IAAK,CAC5D,IAAM1B,EAAI0B,EAAI/C,KAAK9E,MAAMyC,QAAUqC,KAAK9E,MAAMqE,QACxC+B,EAAIwB,EAAI9C,KAAK9E,MAAMyC,QAAUqC,KAAKoC,MAAQ,EAAIpC,KAAK9E,MAAMsE,QAC/DQ,KAAKiC,cAAcU,KAAKK,uBACxBhD,KAAKgC,SAASW,KAAK,cAAC,EAAD,CAA8DtB,EAAGA,EAAGC,EAAGA,EAAG2B,IAAKjD,KAAKiC,cAAcjC,KAAKiC,cAAc5B,OAAS,IAA9G,MAAQgB,EAAE6B,WAAa,OAAS5B,EAAE4B,aACrElD,KAAKkC,kBAAkBiB,IAAIV,KAAKC,UAAU,CACtCrB,EAAGA,EACHC,EAAGA,IACHtB,KAAKiC,cAAc5B,OAAS,QAGpC,IAAK,IAAI0C,EAAI,EAAGA,EAAI/C,KAAK9E,MAAMiE,MAAQa,KAAK9E,MAAMyC,QAAU,EAAGoF,IAAK,CAChE,IAAM1B,EAAI0B,EAAI/C,KAAK9E,MAAMyC,QAAUqC,KAAK9E,MAAMyC,QAAU,EAAIqC,KAAK9E,MAAMqE,QACjE+B,EAAIwB,EAAI9C,KAAK9E,MAAMyC,QAAUqC,KAAKoC,MAAQ,EAAIpC,KAAK9E,MAAMsE,QAC/DQ,KAAKiC,cAAcU,KAAKK,uBACxBhD,KAAKgC,SAASW,KAAK,cAAC,EAAD,CAA8DtB,EAAGA,EAAGC,EAAGA,EAAG2B,IAAKjD,KAAKiC,cAAcjC,KAAKiC,cAAc5B,OAAS,IAA9G,MAAQgB,EAAE6B,WAAa,OAAS5B,EAAE4B,aACrElD,KAAKkC,kBAAkBiB,IAAIV,KAAKC,UAAU,CACtCrB,EAAGA,EACHC,EAAGA,IACHtB,KAAKiC,cAAc5B,OAAS,GAI5C,OACI,cAAC,YAAD,UACKL,KAAKgC,e,GAzGIL,aCjHpByB,GAAW,CACf,CACE1G,KAAM,4BACNG,MAAOwG,EACP7H,KAAM,iEACNhB,YAAa,4MAEbQ,aAAc,CAAC,MAAO,SAiBxB,CACE0B,KAAM,cACNG,MAAOyG,EACP9I,YAAa,qRAEbQ,aAAc,CAAC,WAEjB,CACE0B,KAAM,UACNG,MC5CW,IAA0B,qCD6CrCrB,KAAM,uDACNE,QAAS,mCACTlB,YAAa,oSAEbQ,aAAc,CAAC,SAAU,WA0CduI,OAtCf,WACE,OACE,sBAAK/F,GAAG,MAAR,UACE,gCACE,oBAAIA,GAAG,QAAP,iCACA,cAACH,EAAD,OAEF,sBAAKG,GAAG,gBAAR,UACE,oBAAIA,GAAG,iBAAP,sBACA,oBAAGA,GAAG,oBAAN,2JAEA,uBAFA,2EAKA,oBAAIA,GAAG,kBAAP,wCACA,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,iBAAiBG,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMH,QAAQ,aAApF,SACG,YAAIU,EAAapD,cAAcwI,KAAI,SAAA9G,GAAI,OACpC,cAACoC,EAAD,CAAkBpC,KAAMA,YAKhC,sBAAKc,GAAG,kBAAR,UACI,oBAAIA,GAAG,iBAAP,sBACA,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,iBAAiBG,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMH,QAAQ,SAApF,SACG0F,GAASI,KAAI,SAAAC,GAAO,OACnB,cAACnG,EAAA,EAAD,CAAMS,GAAI,GAAIE,GAAI,EAAGC,MAAI,EAACR,QAAQ,aAAlC,SACE,cAACzC,EAAD,CAAayB,KAAM+G,EAAQ/G,KAAMG,MAAO4G,EAAQ5G,MAAOrB,KAAMiI,EAAQjI,KAAMhB,YAAaiJ,EAAQjJ,YACnFQ,aAAcyI,EAAQzI,aAAcU,QAAS+H,EAAQ/H,oBAK5E,cAACwD,EAAD,QE1ESwE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCHCQ,GADDC,aAAY9F,GCK1B+F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJK,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.0e75939a.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport Collapse from '@material-ui/core/Collapse';\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n      border: \"none\",\n      \"border-radius\": \"10px\",\n      height: \"fit-content\",\n      padding: 10,\n      \"background-color\": \"#61892F\",\n    },\n    media: {\n      objectFit: 'contain',\n      height: '400px'\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white'\n    },\n    description: {\n      color: \"white\",\n      textAlign: \"center\",\n      marginTop: 10,\n      padding: \"10px\"\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  });\n\nconst selectTechnologies = state => state.technologies;\n\nfunction containsAnyItem(firstSet, secondSet) {\n  for (const element of firstSet) {\n    if (secondSet.has(element)) {\n      return true;\n    }\n  }\n  return false;\n}\n  \nexport default function ProjectCard(props) {\n    const classes = useStyles();\n\n    const clickCallback = useCallback(() => {\n      window.open(props.link)\n    }, [props.link]);\n\n    const websiteCallback = useCallback(() => {\n      window.open(props.website)\n      }, [props.website]);\n\n    const technologies = useSelector(selectTechnologies);\n    const hasValidTechnology = containsAnyItem(props.technologies, technologies);\n\n    return (<Collapse in={hasValidTechnology} timeout={\"auto\"} unmountOnExit>\n              <Card className=\"project-container\" className={classes.root} key={props.name}>\n                <CardHeader title={props.name} className=\"project-container-title\"/>\n                <CardMedia className={classes.media} component=\"img\" image={props.image}/>\n                <Typography component=\"p\" className={classes.description}>\n                  {props.description}\n                </Typography>\n                <div className={classes.buttonContainer}>\n                  {props.link &&\n                    <CardActions>\n                      <Button variant=\"outlined\" className={classes.button} \n                        startIcon={<GitHubIcon/>} onClick={clickCallback}>\n                        Code\n                      </Button>\n                    </CardActions>\n                  }\n                  {props.website &&\n                    <CardActions>\n                      <Button variant=\"outlined\" className={classes.button} \n                        startIcon={<WebAssetIcon/>} onClick={websiteCallback}>\n                        Website\n                      </Button>\n                    </CardActions>\n                  }\n                </div>\n              </Card>\n            </Collapse>);\n}  ","export default __webpack_public_path__ + \"static/media/LEDLightStripScheduler.e7f51a54.png\";","export default __webpack_public_path__ + \"static/media/CoinConnect.8e54a28d.png\";","export default __webpack_public_path__ + \"static/media/Dharmarajan_Karthik_Resume.ebf414b8.pdf\";","import Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport resume from './assets/Dharmarajan_Karthik_Resume.pdf'\n\nconst useStyles = makeStyles({\n    button: {\n        margin: 'auto',\n        borderColor: 'white',\n        color: 'white'\n    },\n    root: {\n        border: \"none\",\n        \"border-radius\": \"10px\",\n        height: \"fit-content\",\n        padding: 10,\n        \"background-color\": \"#2E9CCA\",\n    }  \n});\n\nexport default function ContactSegment(props) {\n    const classes = useStyles();\n\n    const clickCallbackLinkedIn = () => {\n        window.open('https://www.linkedin.com/in/karthik-dharmarajan/');\n    };\n\n    const clickCallbackGitHub = () => {\n        window.open('https://github.com/KDharmarajanDev/');\n    };\n\n    const showResume = () => {\n        window.open(resume);\n    }\n\n    return (<Grid container id=\"contact-segment-container\" align=\"center\" justify=\"center\" spacing={5} wrap=\"wrap\" direction=\"row\" alignItems=\"center\">\n                <Grid xs={12} sm={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackLinkedIn} startIcon={<LinkedInIcon/>}>\n                        LinkedIn\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackGitHub} startIcon={<GitHubIcon/>}>\n                        GitHub\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} \n                        onClick={showResume} startIcon={<ReceiptIcon/>}>\n                        Resume\n                    </Button>\n                </Grid>\n            </Grid>);\n}","export const initialState = {\n    technologies: new Set([\"Python\", \"Java\", \"C++\", \"Swift\", \"React\", \"Node.JS\", \"ROS\"])\n};\n\nconst projectFilterReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"toggle\":\n            const modifiedTechnologies = new Set(state.technologies);\n            if (state.technologies.has(action.payload)) {\n                modifiedTechnologies.delete(action.payload);\n            } else {\n                modifiedTechnologies.add(action.payload);\n            }\n            return {\n                technologies: modifiedTechnologies\n            };\n        default:\n            return state;\n    }\n}\n\nexport default projectFilterReducer;","import { makeStyles } from '@material-ui/core/styles';\nimport { ButtonBase } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white',\n      border: 'solid',\n      borderColor: 'white',\n      borderRadius: \"10px\",\n      fontSize: \"20px\",\n      padding: \"10px\"\n    },\n    buttonUsed: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: '#61892F',\n      border: 'solid',\n      borderColor: 'white',\n      borderRadius: \"10px\",\n      fontSize: \"20px\",\n      padding: \"10px\",\n      backgroundColor: \"white\",\n    }\n  });\n  \nconst selectTechnologies = state => state.technologies;\n\nexport default function TechnologyButton(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const clickHandler = () => {\n        dispatch({type: \"toggle\", payload: props.name});\n    };\n\n    const technologies = useSelector(selectTechnologies);\n\n    return (<ButtonBase onClick={clickHandler} className={technologies.has(props.name) ? classes.buttonUsed : classes.button}>\n                {props.name}\n            </ButtonBase>);\n}  ","import {React, useCallback, createRef, Component} from 'react';\nimport { Stage, Graphics, Container } from '@inlet/react-pixi'\n\nexport default function FooterAnimation (props) {\n    return (\n    <Stage height={300} width={window.innerWidth} options={{ backgroundColor: 0x222629}}>\n        <Tesselation height={300} width={window.innerWidth} spacing={60} xOffset={30} yOffset={30}/>\n    </Stage>\n    )\n}\n\nclass PowerNode extends Component {\n\n    constructor(props) {\n        super(props);\n        this.timerId = null;\n        this.neighbors = [];\n        this.state = {'transitionTimer': 0};\n        this.isEmptyNode = true;\n        this.targetNeighbor = null;\n        this.update = this.update.bind(this);\n    }\n\n    update() {\n        this.setState({\n            'transitionTimer': this.state.transitionTimer - 100 / 6.0\n        });\n        if (this.state.transitionTimer <= 0) {\n            this.stopTransition();\n        }\n    }\n\n    transitionToFull() {\n        this.isEmptyNode = false;\n        this.targetNeighbor = null;\n        this.startTransition();\n    }\n\n    transitionToEmpty() {\n        this.isEmptyNode = true;\n        if (this.neighbors.length > 0) {\n            this.targetNeighbor = this.neighbors[Math.floor(Math.random() * this.neighbors.length)];\n            if (!this.targetNeighbor.current.isEmptyNode) {\n                setTimeout(() => {\n                    this.transitionToEmpty();\n                }, 500);\n                return;\n            }\n            this.targetNeighbor.current.transitionToFull();\n        }\n        this.startTransition();\n    }\n\n    startTransition() {\n        this.setState({\n            'transitionTimer': 1000\n        });\n        if (!this.timerId) {\n            this.timerId = setInterval(this.update, 100 / 6.0);\n        }\n    }\n\n    stopTransition() {\n        clearInterval(this.timerId);\n        this.timerId = null;\n        if (!this.isEmptyNode) {\n            setTimeout(() => {\n                this.transitionToEmpty();\n            }, Math.random() * 3000 + 1000);\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Graphics draw={(g) => {\n                    g.clear();\n                    const outerCircleRadius = 10;\n                    const innerCircleRadius = 8;\n                    let fillRadius = 0;\n                    const duration = 1000;\n                    if (this.state.transitionTimer > 0) {\n                        if (!this.isEmptyNode) {\n                            fillRadius = outerCircleRadius * (1 - this.state.transitionTimer / duration);\n                        } else {\n                            fillRadius = outerCircleRadius * (this.state.transitionTimer / duration);\n                        }\n                    } else if (!this.isEmptyNode) {\n                        fillRadius = outerCircleRadius;\n                    }\n                    g.beginFill(0x86C232, 1);\n                    g.drawCircle(this.props.x, this.props.y, outerCircleRadius);\n                    g.endFill();\n                    g.beginFill(0x222629, 1);\n                    g.drawCircle(this.props.x, this.props.y, innerCircleRadius);\n                    g.endFill();\n                    g.beginFill(0x86C232, 1);\n                    g.drawCircle(this.props.x, this.props.y, fillRadius);\n                    g.endFill();\n                }}/>\n                {\n                    this.state.transitionTimer > 0 && this.isEmptyNode && <PowerTransferBeam x={this.props.x} y={this.props.y} \n                                                                                            endX={this.targetNeighbor.current.props.x} endY={this.targetNeighbor.current.props.y}/>\n                }\n            </Container>\n        )    \n    }\n}\n\n\nfunction PowerTransferBeam (props) {\n    const draw = useCallback(g => {\n        g.clear();\n        g.beginFill(0x86C232, 1);\n        g.lineStyle(4, 0x86C232, 1);\n        g.moveTo(props.x, props.y);\n        g.lineTo(props.endX, props.endY);\n        g.endFill();\n    });\n    return (\n        <Graphics draw={draw}/>\n    )\n}\n\nclass Tesselation extends Component {\n\n    constructor (props) {\n        super(props);\n        this.hexagons = [];\n        this.powerNodeRefs = [];\n        this.coordinateToIndex = new Map();\n        this.root3 = Math.sqrt(3);\n    }\n\n    componentDidMount() {\n        for (let nodeRef of this.powerNodeRefs) {\n            const x = nodeRef.current.props.x;\n            const y = nodeRef.current.props.y;\n            let newNeighbor = null;\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x + this.props.spacing,\n                y: y\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x - this.props.spacing,\n                y: y\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            const newXOffset = this.props.spacing / 2;\n            const newYOffset = this.props.spacing * this.root3 / 2;\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x - newXOffset,\n                y: y - newYOffset\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x + newXOffset,\n                y: y - newYOffset\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x - newXOffset,\n                y: y + newYOffset\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            newNeighbor = this.coordinateToIndex.get(JSON.stringify({\n                x: x + newXOffset,\n                y: y + newYOffset\n            }));\n            if (newNeighbor) {\n                nodeRef.current.neighbors.push(this.powerNodeRefs[newNeighbor]);\n            }\n            newNeighbor = null;\n\n            if (Math.random() < 0.3) {\n                nodeRef.current.transitionToFull();\n            }\n        }\n    }\n\n    render () {\n        for (let j = 0; j < this.root3 * this.props.height / this.props.spacing - 3; j++) {\n            if (j % 2 == 0) {\n                for (let i = 0; i < this.props.width / this.props.spacing; i++) {\n                    const x = i * this.props.spacing + this.props.xOffset;\n                    const y = j * this.props.spacing * this.root3 / 2 + this.props.yOffset;\n                    this.powerNodeRefs.push(createRef());\n                    this.hexagons.push(<PowerNode key={\"X: \" + x.toString() + \" Y: \" + y.toString()} x={x} y={y} ref={this.powerNodeRefs[this.powerNodeRefs.length - 1]}/>);\n                    this.coordinateToIndex.set(JSON.stringify({\n                        x: x,\n                        y: y\n                    }), this.powerNodeRefs.length - 1);\n                }\n            } else {\n                for (let i = 0; i < this.props.width / this.props.spacing - 1; i++) {\n                    const x = i * this.props.spacing + this.props.spacing / 2 + this.props.xOffset;\n                    const y = j * this.props.spacing * this.root3 / 2 + this.props.yOffset;\n                    this.powerNodeRefs.push(createRef());\n                    this.hexagons.push(<PowerNode key={\"X: \" + x.toString() + \" Y: \" + y.toString()} x={x} y={y} ref={this.powerNodeRefs[this.powerNodeRefs.length - 1]}/>);\n                    this.coordinateToIndex.set(JSON.stringify({\n                        x: x,\n                        y: y\n                    }), this.powerNodeRefs.length - 1);\n                }\n            }\n        }\n        return (\n            <Container>\n                {this.hexagons}\n            </Container>\n        );\n    }\n}","import './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard';\nimport LEDLightStripScheduler from './assets/LEDLightStripScheduler.png';\nimport CoinConnect from './assets/CoinConnect.png';\nimport ContactSegment from './ContactSegment';\nimport { initialState } from './project-filter-reducer';\nimport TechnologyButton from './technology-button';\nimport FooterAnimation from './FooterAnimation';\nimport SandboxImage from './assets/Sandbox.jpeg';\n\nconst projects = [\n  {\n    name: \"LED Light Strip Scheduler\",\n    image: LEDLightStripScheduler,\n    link: \"https://github.com/KDharmarajanDev/led-light-strip-android-app\",\n    description: \"LED Light Strip Scheduler is a simple and powerful application on the \" \n    + \"Android operating system that allows users to control an Arduino operating RGB LED Strips with over one billion possible sequences.\",\n    technologies: [\"C++\", \"Java\"]\n  },\n  // {\n  //   name: \"Knot Visualizer\",\n  //   image: \"./assets/LEDLightStripScheduler.png\",\n  //   link: \"https://github.com/KDharmarajanDev/knot-visualizer-app\",\n  //   description: \"Knot Visualizer is an iOS application fueled by ARKit that displays the progression of knot tying in \"\n  //   + \"one's environment with the goal of educating the end user.\",\n  //   technologies: [\"Swift\"]\n  // },\n  // {\n  //   name: \"Drone Control Web Server\",\n  //   image: \"./assets/LEDLightStripScheduler.png\",\n  //   link: \"https://github.com/KDharmarajanDev/drone-control-web-server\",\n  //   description: \"Drone Control Web Server is a modular full-stack application that allows for ssensor data streaming and data plotting.\",\n  //   technologies: [\"React\", \"Node.JS\", \"ROS\"]\n  // },\n  {\n    name: \"CoinConnect\",\n    image: CoinConnect,\n    description: \"CoinConnect is a Discord bot that is a centralized means of managing cryptocurrency portfolios across various crypto exchanges. This bot utilizes \"\n                  + \"The bot supports asset selling/buying, price data gathering, and showing the portfolio valuation. The GitHub code is not public.\",\n    technologies: [\"Python\"]\n  },\n  {\n    name: \"Sandbox\",\n    image: SandboxImage,\n    link: \"https://github.com/shreystechtips/106a-final-project\",\n    website: \"https://sandbox-106a.weebly.com/\",\n    description: \"The Sandbox is an intelligent kinetic sand table that is able to draw patterns on sand by moving the steel ball. Input for the design can be taken as mathematical \" +\n                \"functions, G-code files, or as a drawing from a user interface. The Sandbox also has an interactive mode that tracks a finger.\",\n    technologies: [\"Python\", \"React\"]\n  }\n]\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <div>\n        <h1 id=\"title\">Karthik Dharmarajan</h1>\n        <ContactSegment/>\n      </div>\n      <div id=\"intro-section\">\n        <h2 id=\"about-me-title\">About Me</h2>\n        <p id=\"about-description\">\n        I'm a UC Berkeley student studying electrical engineering and computer science with a passion for autonomous systems and intelligent robotics.\n        <br></br>\n        I enjoy creating software solutions that are intuitive and efficient.\n        </p>\n        <h3 id=\"languages-title\">Languages and Technologies</h3>\n        <Grid container id=\"grid-container\" spacing={5} wrap=\"wrap\" direction=\"row\" justify=\"flex-start\">\n          {[...initialState.technologies].map(name => (\n              <TechnologyButton name={name}></TechnologyButton>\n            ))\n          }\n        </Grid>\n      </div>\n      <div id=\"project-section\">\n          <h2 id=\"projects-title\">Projects</h2>\n          <Grid container id=\"grid-container\" spacing={5} wrap=\"wrap\" direction=\"row\" justify=\"center\">\n            {projects.map(project => (\n              <Grid xs={12} md={4} item justify=\"flex-start\">\n                <ProjectCard name={project.name} image={project.image} link={project.link} description={project.description}\n                             technologies={project.technologies} website={project.website}/>\n              </Grid>\n            ))}\n          </Grid>\n      </div>\n      <FooterAnimation/>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/Sandbox.f90ea6de.jpeg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\nimport projectFilterReducer from './project-filter-reducer';\n\nconst store = createStore(projectFilterReducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}