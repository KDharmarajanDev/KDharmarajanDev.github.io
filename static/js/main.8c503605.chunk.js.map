{"version":3,"sources":["ProjectCard.js","assets/LEDLightStripScheduler.png","assets/CoinConnect.png","assets/Dharmarajan_Karthik_Resume.pdf","ContactSegment.js","project-filter-reducer.js","technology-button.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["useStyles","makeStyles","root","border","height","padding","media","objectFit","button","marginLeft","marginRight","borderColor","color","description","textAlign","marginTop","selectTechnologies","state","technologies","ProjectCard","props","classes","useSelector","hasValidTechnology","firstSet","secondSet","element","has","containsAnyItem","Collapse","in","timeout","unmountOnExit","Card","className","CardHeader","title","name","CardMedia","component","image","Typography","link","CardActions","Button","variant","startIcon","onClick","window","open","margin","ContactSegment","Grid","container","id","align","justify","spacing","wrap","direction","alignItems","xs","sm","md","item","resume","initialState","Set","projectFilterReducer","action","type","modifiedTechnologies","payload","delete","add","buttonUsed","TechnologyButton","dispatch","useDispatch","ButtonBase","projects","LEDLightStripScheduler","CoinConnect","App","map","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAWMA,EAAYC,YAAW,CACzBC,KAAM,CACJC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,WAEtBC,MAAO,CACLC,UAAW,UACXH,OAAQ,SAEVI,OAAQ,CACNC,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,SAETC,YAAa,CACXD,MAAO,QACPE,UAAW,SACXC,UAAW,GACXV,QAAS,UAITW,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,cAW3B,SAASC,EAAYC,GAAQ,IAAD,EACjCC,EAAUrB,IAMVkB,EAAeI,YAAYN,GAC3BO,EAjBV,SAAyBC,EAAUC,GAAY,IAAD,gBACtBD,GADsB,IAC5C,2BAAgC,CAAC,IAAtBE,EAAqB,QAC9B,GAAID,EAAUE,IAAID,GAChB,OAAO,GAHiC,8BAM5C,OAAO,EAWsBE,CAAgBR,EAAMF,aAAcA,GAE/D,OAAQ,cAACW,EAAA,EAAD,CAAUC,GAAIP,EAAoBQ,QAAS,OAAQC,eAAa,EAAhE,SACE,eAACC,EAAA,GAAD,GAAMC,UAAU,qBAAhB,0BAA+Cb,EAAQnB,MAAvD,0BACE,cAACiC,EAAA,EAAD,CAAYC,MAAOhB,EAAMiB,KAAMH,UAAU,4BACzC,cAACI,EAAA,EAAD,CAAWJ,UAAWb,EAAQf,MAAOiC,UAAU,MAAMC,MAAOpB,EAAMoB,QAClE,cAACC,EAAA,EAAD,CAAYF,UAAU,IAAIL,UAAWb,EAAQR,YAA7C,SACGO,EAAMP,cAERO,EAAMsB,MACL,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAWb,EAAQb,OAC5CsC,UAAW,cAAC,IAAD,IAAeC,QAjBtB,WACpBC,OAAOC,KAAK7B,EAAMsB,OAeJ,sBARN,GAAkEtB,EAAMiB,QC3DvE,UAA0B,mDCA1B,MAA0B,wC,kCCA1B,MAA0B,uDCQnCrC,EAAYC,YAAW,CACzBO,OAAQ,CACJ0C,OAAQ,OACRvC,YAAa,QACbC,MAAO,SAEXV,KAAM,CACFC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,aAIb,SAAS8C,EAAe/B,GACnC,IAAMC,EAAUrB,IAchB,OAAQ,eAACoD,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,4BAA4BC,MAAM,SAASC,QAAQ,SAASC,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMC,WAAW,SAAlI,UACI,cAACR,EAAA,EAAD,CAAMS,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAhC,SACI,cAACpB,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAWb,EAAQb,OAAQuC,QAdxC,WAC1BC,OAAOC,KAAK,qDAasFH,UAAW,cAAC,IAAD,IAAjG,wBAIJ,cAACM,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAACpB,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAWb,EAAQb,OAAQuC,QAf1C,WACxBC,OAAOC,KAAK,wCAcoFH,UAAW,cAAC,IAAD,IAA/F,sBAIJ,cAACM,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAACpB,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAWb,EAAQb,OAC1CuC,QAjBD,WACfC,OAAOC,KAAKgB,IAgByBnB,UAAW,cAAC,IAAD,IADpC,yBClDb,I,IAAMoB,EAAe,CACxBhD,aAAc,IAAIiD,IAAI,CAAC,SAAU,OAAQ,MAAO,QAAS,QAAS,UAAW,SAoBlEC,EAjBc,WAAmC,IAAlCnD,EAAiC,uDAAzBiD,EAAcG,EAAW,uCAC3D,OAAQA,EAAOC,MACX,IAAK,SACD,IAAMC,EAAuB,IAAIJ,IAAIlD,EAAMC,cAM3C,OALID,EAAMC,aAAaS,IAAI0C,EAAOG,SAC9BD,EAAqBE,OAAOJ,EAAOG,SAEnCD,EAAqBG,IAAIL,EAAOG,SAE7B,CACHtD,aAAcqD,GAEtB,QACI,OAAOtD,I,QCbbjB,EAAYC,YAAW,CACzBO,QAAM,GACJC,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,QACPT,OAAQ,SALJ,4BAMS,SANT,6BAOU,QAPV,yBAQM,QARN,wBASK,QATL,GAWNwE,YAAU,GACRlE,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,UACPT,OAAQ,SALA,4BAMK,SANL,6BAOM,QAPN,yBAQE,QARF,wBASC,QATD,gCAUS,SAVT,KAcRa,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,cAE3B,SAAS0D,EAAiBxD,GACrC,IAAMC,EAAUrB,IACV6E,EAAWC,cAMX5D,EAAeI,YAAYN,GAEjC,OAAQ,cAAC+D,EAAA,EAAD,CAAYhC,QANC,WACjB8B,EAAS,CAACP,KAAM,SAAUE,QAASpD,EAAMiB,QAKFH,UAAWhB,EAAaS,IAAIP,EAAMiB,MAAQhB,EAAQsD,WAAatD,EAAQb,OAA1G,SACKY,EAAMiB,OClCvB,IAAM2C,EAAW,CACf,CACE3C,KAAM,4BACNG,MAAOyC,EACPvC,KAAM,iEACN7B,YAAa,4MAEbK,aAAc,CAAC,MAAO,SAiBxB,CACEmB,KAAM,cACNG,MAAO0C,EACPrE,YAAa,qRAEbK,aAAc,CAAC,YAyCJiE,MArCf,WACE,OACE,sBAAK7B,GAAG,MAAR,UACE,gCACE,oBAAIA,GAAG,QAAP,iCACA,cAACH,EAAD,OAEF,sBAAKG,GAAG,gBAAR,UACE,oBAAIA,GAAG,iBAAP,sBACA,oBAAGA,GAAG,oBAAN,2JAEA,uBAFA,2EAKA,oBAAIA,GAAG,kBAAP,wCACA,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,iBAAiBG,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMH,QAAQ,aAApF,SACG,YAAIU,EAAahD,cAAckE,KAAI,SAAA/C,GAAI,OACpC,cAACuC,EAAD,CAAkBvC,KAAMA,YAKhC,sBAAKiB,GAAG,kBAAR,UACI,oBAAIA,GAAG,iBAAP,sBACA,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,iBAAiBG,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMH,QAAQ,SAApF,SACGwB,EAASI,KAAI,SAAAC,GAAO,OACnB,cAACjC,EAAA,EAAD,CAAMS,GAAI,GAAIE,GAAI,EAAGC,MAAI,EAACR,QAAQ,aAAlC,SACE,cAACrC,EAAD,CAAakB,KAAMgD,EAAQhD,KAAMG,MAAO6C,EAAQ7C,MAAOE,KAAM2C,EAAQ3C,KAAM7B,YAAawE,EAAQxE,YACnFK,aAAcmE,EAAQnE,6BC1DpCoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCHCQ,EADDC,YAAY5B,GCK1B6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.8c503605.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst useStyles = makeStyles({\n    root: {\n      border: \"none\",\n      \"border-radius\": \"10px\",\n      height: \"fit-content\",\n      padding: 10,\n      \"background-color\": \"#240090\",\n    },\n    media: {\n      objectFit: 'contain',\n      height: '400px'\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white'\n    },\n    description: {\n      color: \"white\",\n      textAlign: \"center\",\n      marginTop: 10,\n      padding: \"10px\"\n    }\n  });\n\nconst selectTechnologies = state => state.technologies;\n\nfunction containsAnyItem(firstSet, secondSet) {\n  for (const element of firstSet) {\n    if (secondSet.has(element)) {\n      return true;\n    }\n  }\n  return false;\n}\n  \nexport default function ProjectCard(props) {\n    const classes = useStyles();\n\n    const clickCallback = () => {\n      window.open(props.link)\n    }\n\n    const technologies = useSelector(selectTechnologies);\n    const hasValidTechnology = containsAnyItem(props.technologies, technologies);\n\n    return (<Collapse in={hasValidTechnology} timeout={\"auto\"} unmountOnExit>\n              <Card className=\"project-container\" className={classes.root} key={props.name}>\n                <CardHeader title={props.name} className=\"project-container-title\"/>\n                <CardMedia className={classes.media} component=\"img\" image={props.image}/>\n                <Typography component=\"p\" className={classes.description}>\n                  {props.description}\n                </Typography>\n                {props.link &&\n                  <CardActions>\n                    <Button variant=\"outlined\" className={classes.button} \n                      startIcon={<GitHubIcon/>} onClick={clickCallback}>\n                      Code\n                    </Button>\n                    </CardActions>\n                }\n              </Card>\n            </Collapse>);\n}  ","export default __webpack_public_path__ + \"static/media/LEDLightStripScheduler.e7f51a54.png\";","export default __webpack_public_path__ + \"static/media/CoinConnect.8e54a28d.png\";","export default __webpack_public_path__ + \"static/media/Dharmarajan_Karthik_Resume.0d0fe9d0.pdf\";","import Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport resume from './assets/Dharmarajan_Karthik_Resume.pdf'\n\nconst useStyles = makeStyles({\n    button: {\n        margin: 'auto',\n        borderColor: 'white',\n        color: 'white'\n    },\n    root: {\n        border: \"none\",\n        \"border-radius\": \"10px\",\n        height: \"fit-content\",\n        padding: 10,\n        \"background-color\": \"#2E9CCA\",\n    }  \n});\n\nexport default function ContactSegment(props) {\n    const classes = useStyles();\n\n    const clickCallbackLinkedIn = () => {\n        window.open('https://www.linkedin.com/in/karthik-dharmarajan/');\n    };\n\n    const clickCallbackGitHub = () => {\n        window.open('https://github.com/KDharmarajanDev/');\n    };\n\n    const showResume = () => {\n        window.open(resume);\n    }\n\n    return (<Grid container id=\"contact-segment-container\" align=\"center\" justify=\"center\" spacing={5} wrap=\"wrap\" direction=\"row\" alignItems=\"center\">\n                <Grid xs={12} sm={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackLinkedIn} startIcon={<LinkedInIcon/>}>\n                        LinkedIn\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackGitHub} startIcon={<GitHubIcon/>}>\n                        GitHub\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} \n                        onClick={showResume} startIcon={<ReceiptIcon/>}>\n                        Resume\n                    </Button>\n                </Grid>\n            </Grid>);\n}","export const initialState = {\n    technologies: new Set([\"Python\", \"Java\", \"C++\", \"Swift\", \"React\", \"Node.JS\", \"ROS\"])\n};\n\nconst projectFilterReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"toggle\":\n            const modifiedTechnologies = new Set(state.technologies);\n            if (state.technologies.has(action.payload)) {\n                modifiedTechnologies.delete(action.payload);\n            } else {\n                modifiedTechnologies.add(action.payload);\n            }\n            return {\n                technologies: modifiedTechnologies\n            };\n        default:\n            return state;\n    }\n}\n\nexport default projectFilterReducer;","import { makeStyles } from '@material-ui/core/styles';\nimport { ButtonBase } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white',\n      border: 'solid',\n      borderColor: 'white',\n      borderRadius: \"10px\",\n      fontSize: \"20px\",\n      padding: \"10px\"\n    },\n    buttonUsed: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: '#190061',\n      border: 'solid',\n      borderColor: 'white',\n      borderRadius: \"10px\",\n      fontSize: \"20px\",\n      padding: \"10px\",\n      backgroundColor: \"white\",\n    }\n  });\n  \nconst selectTechnologies = state => state.technologies;\n\nexport default function TechnologyButton(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const clickHandler = () => {\n        dispatch({type: \"toggle\", payload: props.name});\n    };\n\n    const technologies = useSelector(selectTechnologies);\n\n    return (<ButtonBase onClick={clickHandler} className={technologies.has(props.name) ? classes.buttonUsed : classes.button}>\n                {props.name}\n            </ButtonBase>);\n}  ","import './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard'\nimport LEDLightStripScheduler from './assets/LEDLightStripScheduler.png'\nimport CoinConnect from './assets/CoinConnect.png'\nimport ContactSegment from './ContactSegment';\nimport { initialState } from './project-filter-reducer';\nimport TechnologyButton from './technology-button';\n\nconst projects = [\n  {\n    name: \"LED Light Strip Scheduler\",\n    image: LEDLightStripScheduler,\n    link: \"https://github.com/KDharmarajanDev/led-light-strip-android-app\",\n    description: \"LED Light Strip Scheduler is a simple and powerful application on the \" \n    + \"Android operating system that allows users to control an Arduino operating RGB LED Strips with over one billion possible sequences.\",\n    technologies: [\"C++\", \"Java\"]\n  },\n  // {\n  //   name: \"Knot Visualizer\",\n  //   image: \"./assets/LEDLightStripScheduler.png\",\n  //   link: \"https://github.com/KDharmarajanDev/knot-visualizer-app\",\n  //   description: \"Knot Visualizer is an iOS application fueled by ARKit that displays the progression of knot tying in \"\n  //   + \"one's environment with the goal of educating the end user.\",\n  //   technologies: [\"Swift\"]\n  // },\n  // {\n  //   name: \"Drone Control Web Server\",\n  //   image: \"./assets/LEDLightStripScheduler.png\",\n  //   link: \"https://github.com/KDharmarajanDev/drone-control-web-server\",\n  //   description: \"Drone Control Web Server is a modular full-stack application that allows for ssensor data streaming and data plotting.\",\n  //   technologies: [\"React\", \"Node.JS\", \"ROS\"]\n  // },\n  {\n    name: \"CoinConnect\",\n    image: CoinConnect,\n    description: \"CoinConnect is a Discord bot that is a centralized means of managing cryptocurrency portfolios across various crypto exchanges. This bot utilizes \"\n                  + \"The bot supports asset selling/buying, price data gathering, and showing the portfolio valuation. The GitHub code is not public.\",\n    technologies: [\"Python\"]\n  }\n]\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <div>\n        <h1 id=\"title\">Karthik Dharmarajan</h1>\n        <ContactSegment/>\n      </div>\n      <div id=\"intro-section\">\n        <h2 id=\"about-me-title\">About Me</h2>\n        <p id=\"about-description\">\n        I'm a UC Berkeley student studying electrical engineering and computer science with a passion for autonomous systems and intelligent robotics.\n        <br></br>\n        I enjoy creating software solutions that are intuitive and efficient.\n        </p>\n        <h3 id=\"languages-title\">Languages and Technologies</h3>\n        <Grid container id=\"grid-container\" spacing={5} wrap=\"wrap\" direction=\"row\" justify=\"flex-start\">\n          {[...initialState.technologies].map(name => (\n              <TechnologyButton name={name}></TechnologyButton>\n            ))\n          }\n        </Grid>\n      </div>\n      <div id=\"project-section\">\n          <h2 id=\"projects-title\">Projects</h2>\n          <Grid container id=\"grid-container\" spacing={5} wrap=\"wrap\" direction=\"row\" justify=\"center\">\n            {projects.map(project => (\n              <Grid xs={12} md={4} item justify=\"flex-start\">\n                <ProjectCard name={project.name} image={project.image} link={project.link} description={project.description}\n                             technologies={project.technologies}/>\n              </Grid>\n            ))}\n          </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\nimport projectFilterReducer from './project-filter-reducer';\n\nconst store = createStore(projectFilterReducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}