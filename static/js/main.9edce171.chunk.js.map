{"version":3,"sources":["ProjectCard.js","assets/LEDLightStripScheduler.png","ContactSegment.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","border","height","padding","media","objectFit","button","marginLeft","marginRight","borderColor","color","description","textAlign","marginTop","ProjectCard","props","classes","Card","className","CardHeader","title","name","CardMedia","component","image","Typography","CardActions","Button","variant","startIcon","onClick","window","open","link","margin","ContactSegment","clickCallbackGitHub","Grid","container","id","align","justify","spacing","wrap","direction","alignItems","xs","sm","md","item","projects","LEDLightStripScheduler","App","map","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSASMA,EAAYC,YAAW,CACzBC,KAAM,CACJC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,WAEtBC,MAAO,CACLC,UAAW,UACXH,OAAQ,SAEVI,OAAQ,CACNC,WAAY,OACZC,YAAa,OACbC,YAAa,QACbC,MAAO,SAETC,YAAa,CACXD,MAAO,QACPE,UAAW,SACXC,UAAW,MAIF,SAASC,EAAYC,GAAQ,IAAD,EACjCC,EAAUlB,IAMhB,OAAQ,eAACmB,EAAA,GAAD,GAAMC,UAAU,qBAAhB,0BAA+CF,EAAQhB,MAAvD,0BACI,cAACmB,EAAA,EAAD,CAAYC,MAAOL,EAAMM,KAAMH,UAAU,4BACzC,cAACI,EAAA,EAAD,CAAWJ,UAAWF,EAAQZ,MAAOmB,UAAU,MAAMC,MAAOT,EAAMS,QAClE,cAACC,EAAA,EAAD,CAAYF,UAAU,IAAIL,UAAWF,EAAQL,YAA7C,SACGI,EAAMJ,cAET,cAACe,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWF,EAAQV,OAC7CuB,UAAW,cAAC,IAAD,IAAeC,QAZnB,WACpBC,OAAOC,KAAKjB,EAAMkB,OAUN,sBAPN,GAAkElB,EAAMM,MCzCrE,UAA0B,mD,kCCOnCvB,EAAYC,YAAW,CACzBO,OAAQ,CACJ4B,OAAQ,OACRzB,YAAa,QACbC,MAAO,SAEXV,KAAM,CACFC,OAAQ,OACR,gBAAiB,OACjBC,OAAQ,cACRC,QAAS,GACT,mBAAoB,aAIb,SAASgC,EAAepB,GACnC,IAAMC,EAAUlB,IAMVsC,EAAsB,WACxBL,OAAOC,KAAK,wCAGhB,OAAQ,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,4BAA4BC,MAAM,SAASC,QAAQ,SAASC,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAAMC,WAAW,SAAlI,UACI,cAACR,EAAA,EAAD,CAAMS,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAhC,SACI,cAACtB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWF,EAAQV,OAAQwB,QAVxC,WAC1BC,OAAOC,KAAK,qDASsFH,UAAW,cAAC,IAAD,IAAjG,wBAIJ,cAACQ,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAACtB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWF,EAAQV,OAAQwB,QAASM,EAAqBP,UAAW,cAAC,IAAD,IAA/F,sBAIJ,cAACQ,EAAA,EAAD,CAAMS,GAAI,EAAGE,GAAI,EAAGC,MAAI,EAAxB,SACI,cAACtB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAWF,EAAQV,OAC1CwB,QAASM,EAAqBP,UAAW,cAAC,IAAD,IAD7C,yBCvCpB,IAAMqB,EAAW,CACf,CACE7B,KAAM,4BACNG,MAAO2B,EACPlB,KAAM,iEACNtB,YAAa,6MAGf,CACEU,KAAM,kBACNG,MAAO,sCACPS,KAAM,yDACNtB,YAAa,mKAGf,CACEU,KAAM,2BACNG,MAAO,sCACPS,KAAM,8DACNtB,YAAa,2HA+BFyC,MA3Bf,WACE,OACE,sBAAKb,GAAG,MAAR,UACE,gCACE,oBAAIA,GAAG,QAAP,iCACA,cAACJ,EAAD,OAEF,sBAAKI,GAAG,gBAAR,UACE,oBAAIA,GAAG,iBAAP,sBACA,mBAAGA,GAAG,oBAAN,+JAIF,sBAAKA,GAAG,kBAAR,UACI,oBAAIA,GAAG,iBAAP,sBACA,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,iBAAiBE,QAAQ,gBAAgBC,QAAS,EAAGC,KAAK,OAAOC,UAAU,MAA9F,SACGM,EAASG,KAAI,SAAAC,GAAO,OACnB,cAACjB,EAAA,EAAD,CAAMS,GAAI,GAAIE,GAAI,EAAGC,MAAI,EAAzB,SACE,cAACnC,EAAD,CAAaO,KAAMiC,EAAQjC,KAAMG,MAAO8B,EAAQ9B,MAAOS,KAAMqB,EAAQrB,KAAMtB,YAAa2C,EAAQ3C,4BCnCjG4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9edce171.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n      border: \"none\",\n      \"border-radius\": \"10px\",\n      height: \"fit-content\",\n      padding: 10,\n      \"background-color\": \"#240090\",\n    },\n    media: {\n      objectFit: 'contain',\n      height: '400px'\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white'\n    },\n    description: {\n      color: \"white\",\n      textAlign: \"center\",\n      marginTop: 10\n    }\n  });\n  \nexport default function ProjectCard(props) {\n    const classes = useStyles();\n\n    const clickCallback = () => {\n      window.open(props.link)\n    }\n\n    return (<Card className=\"project-container\" className={classes.root} key={props.name}>\n                <CardHeader title={props.name} className=\"project-container-title\"/>\n                <CardMedia className={classes.media} component=\"img\" image={props.image}/>\n                <Typography component=\"p\" className={classes.description}>\n                  {props.description}\n                </Typography>\n                <CardActions>\n                  <Button variant=\"outlined\" className={classes.button} \n                   startIcon={<GitHubIcon/>} onClick={clickCallback}>\n                    Code\n                  </Button>\n                </CardActions>\n            </Card>);\n}  ","export default __webpack_public_path__ + \"static/media/LEDLightStripScheduler.e7f51a54.png\";","import Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\n\nconst useStyles = makeStyles({\n    button: {\n        margin: 'auto',\n        borderColor: 'white',\n        color: 'white'\n    },\n    root: {\n        border: \"none\",\n        \"border-radius\": \"10px\",\n        height: \"fit-content\",\n        padding: 10,\n        \"background-color\": \"#2E9CCA\",\n    }  \n});\n\nexport default function ContactSegment(props) {\n    const classes = useStyles();\n\n    const clickCallbackLinkedIn = () => {\n        window.open('https://www.linkedin.com/in/karthik-dharmarajan/');\n    };\n\n    const clickCallbackGitHub = () => {\n        window.open('https://github.com/KDharmarajanDev/');\n    };\n\n    return (<Grid container id=\"contact-segment-container\" align=\"center\" justify=\"center\" spacing={5} wrap=\"wrap\" direction=\"row\" alignItems=\"center\">\n                <Grid xs={12} sm={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackLinkedIn} startIcon={<LinkedInIcon/>}>\n                        LinkedIn\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} onClick={clickCallbackGitHub} startIcon={<GitHubIcon/>}>\n                        GitHub\n                    </Button>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Button variant=\"outlined\" className={classes.button} \n                        onClick={clickCallbackGitHub} startIcon={<ReceiptIcon/>}>\n                        Resume\n                    </Button>\n                </Grid>\n            </Grid>);\n}","import './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard'\nimport LEDLightStripScheduler from './assets/LEDLightStripScheduler.png'\nimport ContactSegment from './ContactSegment';\n\nconst projects = [\n  {\n    name: \"LED Light Strip Scheduler\",\n    image: LEDLightStripScheduler,\n    link: \"https://github.com/KDharmarajanDev/led-light-strip-android-app\",\n    description: \"LED Light Strip Scheduler is a simple and powerful application on the \" \n    + \"Android operating system that allows users to control an Arduino operating RGB LED Strips with over one billion possible sequences.\"\n  },\n  {\n    name: \"Knot Visualizer\",\n    image: \"./assets/LEDLightStripScheduler.png\",\n    link: \"https://github.com/KDharmarajanDev/knot-visualizer-app\",\n    description: \"Knot Visualizer is an iOS application fueled by ARKit that displays the progression of knot tying in \"\n    + \"one's environment with the goal of educating the end user.\"\n  },\n  {\n    name: \"Drone Control Web Server\",\n    image: \"./assets/LEDLightStripScheduler.png\",\n    link: \"https://github.com/KDharmarajanDev/drone-control-web-server\",\n    description: \"Drone Control Web Server is a modular full-stack application that allows for ssensor data streaming and data plotting.\"\n  }\n]\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <div>\n        <h1 id=\"title\">Karthik Dharmarajan</h1>\n        <ContactSegment/>\n      </div>\n      <div id=\"intro-section\">\n        <h2 id=\"about-me-title\">About Me</h2>\n        <p id=\"about-description\">\n        I'm a UC Berkeley student studying electrical engineering and computer science with a passion for autonomous systems and intelligent robotics.\n        </p>\n      </div>\n      <div id=\"project-section\">\n          <h2 id=\"projects-title\">Projects</h2>\n          <Grid container id=\"grid-container\" justify=\"space-between\" spacing={5} wrap=\"wrap\" direction=\"row\">\n            {projects.map(project => (\n              <Grid xs={12} md={4} item>\n                <ProjectCard name={project.name} image={project.image} link={project.link} description={project.description}/>\n              </Grid>\n            ))}\n          </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}