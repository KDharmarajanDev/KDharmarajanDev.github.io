{"version":3,"sources":["ProjectCard.js","assets/LEDLightStripScheduler.png","DroneController.js","assets/DroneImage.png","Drone.js","TitleFeature.js","ContactSegment.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","border","height","padding","media","objectFit","button","marginLeft","marginRight","borderColor","color","description","textAlign","marginTop","ProjectCard","props","classes","Card","className","CardHeader","title","name","CardMedia","component","image","Typography","CardActions","Button","variant","startIcon","onClick","window","open","link","DroneController","this","time","delta","setX","setY","setTheta","Drone","React","useState","x","y","theta","droneController","useTick","updatePosition","DroneImage","anchor","scale","rotation","TitleFeature","id","width","options","backgroundColor","ContactSegment","clickCallbackGitHub","Grid","container","justify","spacing","wrap","direction","xs","sm","md","item","IconButton","projects","LEDLightStripScheduler","App","map","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.685a5c20.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n      border: \"none\",\n      \"border-radius\": \"10px\",\n      height: \"fit-content\",\n      padding: 10,\n      \"background-color\": \"#2E9CCA\",\n    },\n    media: {\n      objectFit: 'contain',\n      height: '400px'\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderColor: 'white',\n      color: 'white'\n    },\n    description: {\n      color: \"white\",\n      textAlign: \"center\",\n      marginTop: 10\n    }\n  });\n  \nexport default function ProjectCard(props) {\n    const classes = useStyles();\n\n    const clickCallback = () => {\n      window.open(props.link)\n    }\n\n    return (<Card className=\"project-container\" className={classes.root} key={props.name}>\n                <CardHeader title={props.name} className=\"project-container-title\"/>\n                <CardMedia className={classes.media} component=\"img\" image={props.image}/>\n                <Typography component=\"p\" className={classes.description}>\n                  {props.description}\n                </Typography>\n                <CardActions>\n                  <Button variant=\"outlined\" className={classes.button} \n                   startIcon={<GitHubIcon/>} onClick={clickCallback}>\n                    Code\n                  </Button>\n                </CardActions>\n            </Card>);\n}  ","export default __webpack_public_path__ + \"static/media/LEDLightStripScheduler.e7f51a54.png\";","export class DroneController {\n\n    constructor () {\n        this.time = 0;\n    }\n\n    updatePosition (delta, setX, setY, setTheta) {\n\n    }\n\n}","export default __webpack_public_path__ + \"static/media/DroneImage.26824dc7.png\";","import React from 'react';\nimport { DroneController } from './DroneController';\nimport DroneImage from './assets/DroneImage.png';\nimport { Sprite, useTick } from '@inlet/react-pixi';\n\nexport default function Drone(props) {\n    const [x, setX] = React.useState(100);\n    const [y, setY] = React.useState(100);\n    const [theta, setTheta] = React.useState(0);\n\n    const droneController = new DroneController();\n\n    useTick(delta => {\n        droneController.updatePosition(delta, setX, setY, setTheta);\n    });\n\n    return (\n        <Sprite image={DroneImage} anchor={0.5} scale={[0.25, 0.25]} x={x} y={y} rotation={theta}>\n        </Sprite>\n    )\n}","import { Stage, AppConsumer, Container } from '@inlet/react-pixi';\nimport React from 'react';\nimport Drone from './Drone';\n\nexport default function TitleFeature(props) {\n    const CANVAS_HEIGHT = 400;\n    const CANVAS_WIDTH = 1790;\n    \n    return (\n        <div id=\"title-feature\">\n            <Stage width={CANVAS_WIDTH} height={CANVAS_HEIGHT} options={{backgroundColor: 0x1aaabb8}}>\n                <Drone></Drone>\n            </Stage>\n        </div>);\n}","import Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    button: {\n        // marginLeft: 'auto',\n        // marginRight: 'auto',\n        borderColor: 'white',\n        color: 'white'\n    },\n    root: {\n        border: \"none\",\n        \"border-radius\": \"10px\",\n        height: \"fit-content\",\n        padding: 10,\n        \"background-color\": \"#2E9CCA\",\n    }  \n});\n\nexport default function ContactSegment(props) {\n    const classes = useStyles();\n\n    const clickCallbackLinkedIn = () => {\n        window.open('https://www.linkedin.com/in/karthik-dharmarajan/');\n    };\n\n    const clickCallbackGitHub = () => {\n        window.open('https://github.com/KDharmarajanDev/');\n    };\n\n    return (<Grid container id=\"contact-segment-container\" justify=\"space-between\" spacing={5} wrap=\"wrap\" direction=\"row\">\n                <Grid xs={12} sm={6} md={3} item>\n                    <Card key=\"LinkedInButton\" className={classes.root}>\n                        <IconButton className={classes.button} onClick={clickCallbackLinkedIn}>\n                            <LinkedInIcon/>\n                        </IconButton>\n                    </Card >\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Card key=\"GitHubButton\" className={classes.root}>\n                        <IconButton className={classes.button} onClick={clickCallbackGitHub}>\n                            <GitHubIcon/>\n                        </IconButton>\n                    </Card>\n                </Grid>\n                <Grid xs={6} md={3} item>\n                    <Card key=\"ResumeButton\" className={classes.root}>\n                        <Button variant=\"outlined\" className={classes.button} \n                            onClick={clickCallbackGitHub}>\n                            Resume\n                        </Button>\n                    </Card>\n                </Grid>\n            </Grid>);\n}","import './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard'\nimport LEDLightStripScheduler from './assets/LEDLightStripScheduler.png'\nimport TitleFeature from './TitleFeature';\nimport ContactSegment from './ContactSegment';\n\nconst projects = [\n  {\n    name: \"LED Light Strip Scheduler\",\n    image: LEDLightStripScheduler,\n    link: \"https://github.com/KDharmarajanDev/led-light-strip-android-app\",\n    description: \"LED Light Strip Scheduler is a simple and powerful application on the \" \n    + \"Android operating system that allows users to control an Arduino operating RGB LED Strips with over one billion possible sequences.\"\n  },\n  {\n    name: \"Knot Visualizer\",\n    image: \"./assets/LEDLightStripScheduler.png\",\n    link: \"https://github.com/KDharmarajanDev/knot-visualizer-app\",\n    description: \"Knot Visualizer is an iOS application fueled by ARKit that displays the progression of knot tying in \"\n    + \"one's environment with the goal of educating the end user.\"\n  },\n  {\n    name: \"Drone Control Web Server\",\n    image: \"./assets/LEDLightStripScheduler.png\",\n    link: \"https://github.com/KDharmarajanDev/drone-control-web-server\",\n    description: \"Drone Control Web Server is a modular full-stack application that allows for ssensor data streaming and data plotting.\"\n  }\n]\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <div>\n        <h1 id=\"title\">Karthik Dharmarajan</h1>\n        <ContactSegment/>\n      </div>\n      <div id=\"intro-section\">\n      </div>\n      <TitleFeature/>\n      <div id=\"project-section\">\n          <h2 id=\"projects-title\">Projects</h2>\n          <Grid container id=\"grid-container\" justify=\"space-between\" spacing={5} wrap=\"wrap\" direction=\"row\">\n            {projects.map(project => (\n              <Grid xs={12} md={4} item>\n                <ProjectCard name={project.name} image={project.image} link={project.link} description={project.description}/>\n              </Grid>\n            ))}\n          </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}